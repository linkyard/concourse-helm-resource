#!/bin/bash

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source /opt/resource/common.sh

# Read inputs
payload=$(mktemp $TMPDIR/helm-resource-request.XXXXXX)
cat > $payload <&0

# Prepare
setup_resource $payload
echo "Resource setup successful."

# Parse parameters
namespace=$(jq -r '.source.namespace // "default"' < $payload)
release=$(jq -r '.source.release // ""' < $payload)

current_release=$(jq -r '.version.release' < $payload || true)
if [ -z "$release" ]; then
  release="$current_release"
fi

current_rev=$(jq -r '.version.revision // "0"' < $payload || true)

if [ "$current_rev" -eq "0" ]; then
  # Empty => return the current
  helm history $release | tail -n 1 | while read -r line; do
    revision=$(echo $line | awk '{ print $1 }')
    echo "$revision"
  done | jq -R '.' | jq -s "map({\"revision\": ., \"release\": \"$release\"})"
else
  # All versions equal and newer
  helm history $release | tail -n +2 | while read -r line; do
    revision=$(echo $line | awk '{ print $1 }')
    if [ -z "$current_rev" ] || [ "$revision" -ge "$current_rev" ]; then
      echo "$revision"
    fi
  done | jq -R '.' | jq -s "map({\"revision\": ., \"release\": \"$release\"})"
fi
